[project]
authors = [{name = "{{ cookiecutter.full_name }}", email="{{ cookiecutter.email }}"}]
classifiers=[
{%- if cookiecutter.license == "GPLv3" %}
    "License :: OSI Approved :: GNU General Public License v3 (GPLv3)",
{%- elif cookiecutter.license == "Apache" %}
    "License :: OSI Approved :: Apache Software License",
{%- elif cookiecutter.license == "MIT" %}
    "License :: OSI Approved :: MIT License",
{%- endif %}
    "Programming Language :: Python :: {{ cookiecutter.python_major_version }}.{{ cookiecutter.python_minor_version }}"
]
dependencies = ["build123d (>=0.9.1, <1.0)"]
description = "{{ cookiecutter.project_short_description }}"
dynamic = ["readme"]
{%- if cookiecutter.license is not none %}
license = "{{ cookiecutter.license }}"
{%- endif %}
name = "{{ cookiecutter.project_name }}"
requires-python = "^{{ cookiecutter.python_major_version }}.{{ cookiecutter.python_minor_version }}"
version = "v0.1.0"

[tool.setuptools.dynamic]
readme = {file = ["README.md"]}

[project.urls]
Repository = "{{ cookiecutter.url }}"

[tool.black]
line-length = 100

[tool.cruft]
skip = [
    "{{ cookiecutter.project_name }}/__init__.py",
    "README.md",
    "CHANGELOG.md",
    "vulture_allowlist.py"
]

[tool.isort]
known_first_party = "{{ cookiecutter.project_name }}"
line_length = 100
skip_glob="**/__init__.py"
### for compatibility with black
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true

[tool.mypy]
check_untyped_defs = true

[tool.vulture]
exclude=[]
paths = ["{{ cookiecutter.__project_slug }}", "vulture_allowlist.py"]

[tool.poetry]
include = ["CHANGELOG.md", "README.md"]

[tool.poetry.group.dev.dependencies]
black = "{{ cookiecutter._black_version }}"
cruft = "*"
dlint = "{{ cookiecutter._dlint_version }}"
flake8 = "{{ cookiecutter._flake8_version }}"
isort = "{{ cookiecutter._isort_version }}"
mypy = "{{ cookiecutter._mypy_version }}"
pudb = "^2022.1.2"
pynvim = "^0.4.3"
vulture = "{{ cookiecutter._vulture_version }}"

[build-system]
requires = ["poetry-core>=2.0.0,<3.0.0"]
build-backend = "poetry.core.masonry.api"
